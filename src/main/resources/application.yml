server:
    port: 8082
    context-path: /
    
db:
    host: ${DB_HOST:ec2-54-243-253-24.compute-1.amazonaws.com}
    port: ${DB_PORT:5432}
    database: ${DB_DATABASE:db3hmvsfad1ru0}
    username: ${DB_USERNAME:oflbkrmqrgjcii}
    password: ${DB_PASSWORD:075a46e7517919940993e7ab7c74fb7aa92a910a7b6c419b7b60231d08e7cbdc}
    
spring: 
    datasource:
        url: jdbc:postgresql://${db.host}:${db.port}/${db.database}?useSSL=true&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
        username: ${db.username}
        password: ${db.password}

    jpa:
        properties:
            hibernate:
                temp:    
                    use_jdbc_metadata_defaults: false

    servlet:
        multipart:
            enabled: true
            file-size-threshold: 2KB
            max-request-size: 215MB
            max-file-size: 200MB
    
security:
    basic:
        enabled: false
    oauth2:
        client:
            clientId: devglan-client
            clientSecret: devglan-secret
            accessTokenUri: http://localhost:9092/oauth/token
            userAuthorizationUri: http://localhost:9092/oauth/authorize
        resource:
            userInfoUri: http://localhost:9092/user/info
            filter_order: 3


## MULTIPART (MultipartProperties)
# Enable multipart uploads
# spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
# spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
# spring.servlet.multipart.max-file-size=200MB
# Max Request Size
# spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
# file.upload-dir=./uploads